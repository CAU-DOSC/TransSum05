오픈 소스 소프트웨어의 사회적 맥락
이것은 진정으로 쓰여진 것으로, 최고의 해킹은 작가의 일상적인 문제에 대한 개인적인 해결책으로 시작되어, 이 문제가 많은 사용자 층들에게 전형적인 것으로 드러났기 때문에 퍼지는 것이다. 이는 우리를 규칙 1의 문제로 되돌아 가게 하며, 이는 좀 더 유용한 방법으로 다시 언급된다. 
18살 흥미로운 문제를 해결하기 위해, 여러분에게 흥미로운 문제를 발견하는 것으로 시작하세요. 
그래서 그것은 칼 해리스와 그 조상들의 편의를 봐준 것이었고, 나와 동료들도 그렇게 해 주었다. 하지만 이것은 오랫동안 이해되어 왔다. 흥미로운 점은 Linux와 fetchmail의 역사가 우리에게 중점을 두라고 요구하는 것처럼 보이는 그 다음 단계는 사용자와 전달자의 크고 활동적인 공동체가 존재하는 소프트웨어의 발전이다. 
MythicalMan-Month에서는, FredBrooks는 프로그래머 시간이 쉽지 않다는 것을 발견했습니다. 늦은 소프트웨어 프로젝트에 개발자를 추가하는 것은 나중에 이루어지는 것입니다. 앞에서 살펴본 바와 같이, 그는 작업이 선형적으로만 증가하는 반면, 개발자의 수에 따라 프로젝트의 복잡성과 통신 비용이 증가한다고 주장했다. 브룩스의 법칙은 진리로 널리 여겨져 왔다. 하지만 우리는 이 논문에서 오픈 소스 개발의 과정이 그 이면의 추정들을 왜곡시키는 여러가지 방법들을 검토해 왔다.
제럴드 웨인버그의 고전인 컴퓨터 프로그래밍 심리학은 뒤늦게 우리가 브룩스에게 중요한 수정 요인으로 볼 수 있는 것을 제공했다. 웨인버그는 '이기적 프로그래밍'에 대한 토론에서 개발자가 코드를 사용하지 않는 상점에서 다른 사람들로 하여금 버그와 잠재적 개선 방법을 찾도록 장려하는 면에서 다른 것보다 훨씬 빠르게 개선이 이루어진다고 말했다. (최근에, 켄트 벡의 극단적인 프로그래밍 기술은 한명의 다른 사람들의 어깨 위를 바라보며 무리하게 코드를 배치하는 것이 이러한 효과를 강제하는 시도로 보입니다.) 
웨인버그의 용어 선택은 아마도 그의 분석이 인터넷 해커들을 "이기적"이라고 묘사하는 것을 생각하면 미소를 지어야 하는 그런 수용을 얻지 못하게 했을 것이다. 하지만 오늘날 그의 주장은 그 어느 때보다 설득력이 있어 보입니다. 
이 바자회 방법은 "이기적인 프로그래밍"효과를 최대한 활용하여 브룩스가 법에 미치는 영향을 크게 완화시켜 주었다. 브룩스의 법칙 뒤에 있는 원리는 폐지되지 않았지만, 많은 개발자들과 저렴한 의사 소통을 통해, 브룩스의 효과는 달리 눈에 띄지 않는 경쟁적인 비-기후에 밀릴 수 있다. 이는 뉴턴과 아인슈타인의 물리학 사이의 관계와 유사합니다. 오래 된 시스템은 낮은 에너지에서도 여전히 유효하지만, 질량과 속도를 충분히 밀어내면 핵 폭발이나 리눅스와 같은 놀라움을 얻게 됩니다.
유닉스의 역사는 우리가 리눅스로부터 배우고 있는 것(그리고 내가 실험적으로 더 작은 규모로 라이너스의 방법[EGCS]을 의도적으로 모방함으로써 실험적으로 확인한 것)에 대비해 주었어야 했다. 즉, 코드 쓰기는 본질적으로 혼자 하는 활동으로 남아 있지만, 정말로 큰 해킹은 전체 커뮤니티의 관심과 영감을 활용하는 데서 온다. 폐쇄된 프로젝트에서 자신의 뇌만 사용하는 개발자는 다른 수천명의 개선으로부터 설계 공간, 코드 기여 및 버그-spotg의 피드백을 얻는 개방적이고 진화적인 상황을 만드는 방법을 알지 못하게 될 것이다. 
하지만 전통적인 유닉스 세계는 몇가지 요인에 의해 이 접근을 궁극적인 것으로 밀어 붙이는 것이 금지되어 있었다. 하나는 다양한 라이선스, 무역 비밀, 상업적 이익의 법적 구속이었다. 또 하나의 뒤늦은 깨달음은 인터넷이 아직 충분하지 않다는 것이었다. 
저렴한 인터넷 이전에, 문화가 웨인버그의 "이기적이지 않은 "프로그래밍을 장려하는 지리적으로 작은 공동체들이 있었고, 개발자는 쉽게 많은 숙련된 키비츠 기와 코더를 끌어 들일 수 있었다. 벨 연구소, MITAI및 LCS연구소, UC버클리-이 전설적이고 여전히 강력한 혁신의 본거지가 되었다. 
리눅스는 전 세계를 그들의 인재 풀로 사용하기 위한 의식적이고 성공적인 노력이 만들어진 첫번째 프로젝트였다. Linux의 임신 기간이 WorldWideWeb의 탄생과 일치하고 ISP산업의 주류 혁명과 폭발적인 발전을 목격한 1993-1994년의 같은 기간 동안에 Linux가 초기 단계를 벗어난 것은 우연이 아니라고 생각합니다. 라이너스는 인터넷 액세스에 널리 적용되는 새로운 규칙에 따라 작업하는 방법을 배운 최초의 사용자였습니다. 
저렴한 인터넷이 리눅스 모델이 발전하기 위해 필요한 조건이었지만, 그 자체로는 충분하지 않았다고 생각한다. 또 하나의 중요한 요소는 개발 업체들이 공동 개발 업체들을 끌어들이고 매체로부터 최대한의 활용을 이끌어 낼 수 있도록 하는 리더십 스타일과 협력적 풍습 세트의 개발이었다. 
하지만 이런 리더십 스타일은 무엇이고 이러한 관습들은 무엇일까요? 그들은 권력 관계에 기초할 수 없으며, 그것이 그러할 수 있다 하더라도, 강압에 의한 지도력은 우리가 보는 결과를 가져오지 않을 것이다. Weinberg는 19세기 러시아 무정부 주의자인 PyotrAlexeyvichKropotkin의 혁명가의 추억의 자서전을 인용하여 이 주제에 좋은 영향을 주었다. 
저는 선원 집안에서 자랐기 때문에, 저와 같은 모든 젊은이들처럼, 명령하고, 명령하고, 꾸짖고, 벌을 주는 것이 필요하다는 확신을 갖고, 활동적인 삶을 살았습니다. 하지만, 초기에, 저는 진지한 기업들을 경영하고, 남자들을 상대해야 했을 때, 모든 실수가 즉시 무거운 결과를 가져올 때, 저는 명령의 원칙에 따라 행동하는 것과 전자는 열병식에서 훌륭하게 작동하지만, 실제 삶과 관련된 곳에서는 아무 가치도 없고, 목적은 많은 의지를 수렴하는 가혹한 노력을 통해서만 달성될 수 있다. 
`` 많은 수렴 의지"를 쏟아 붓는 그"혹독한 노력"은 리눅스 요구 사항과 "명령 원리"와 같은 프로젝트로서 우리가 인터넷이라고 부르는 이 무정부 주의자들의 낙원에 자원 봉사자들 사이에 적용하는 것은 사실상 불가능하다. 협력적 프로젝트를 이끄는 해커들이 효과적으로 운영하고 경쟁하기 위해서는, 크로포트킨의 "이해의 원리"에 의해 모호하게 제시된 방식으로 효과적인 이익 집단을 모집하는 방법을 배워야 한다. 그들은 라이너스의 법률을 써야 한다.
앞서 나는 라이너스의 법칙에 대한 가능한 설명으로 "델포이 효과"를 언급했다. 하지만 생물학과 경제학의 적응 체계에 대한 더 강력한 유사점들은 또한 그들 자신을 더 강하게 암시한다. 리눅스 세계는 자유 시장이나 생태학과 같은 많은 면에서 작용하는데, 이 과정에서 어떤 양의 중앙 계획보다 더 정교하고 효과적으로 달성될 수 있는 자기 수정 자발적 질서를 만들어 내는 효용을 극대화하려고 시도하는 이기적 요원들의 집합이다. 그렇다면 이곳이 "이해의 원리"를 찾기 위한 곳이다. 
리눅스 해커들이 최대화하고 있는``실용적 기능"은 고전적인 경제 체계를 따르지 않는 것은 아니지만 그들 자신의 자아 만족과 평판은 다른 해커들 사이에서도 씻을 수 없는 것이다. (한가지는 그들의 동기를 "이타적"이라고 부를지도 모르지만, 이것은 애타주의가 이타 주의자들에 대한 자아 만족의 한 형태라는 사실을 무시합니다.) 이런 식으로 작용하는 자발적인 문화는 사실 드문 일이 아니다;내가 오랫동안 참여해 온 또 하나의 문화는 해커들이 오랫동안 다른 팬들에게 "자발적인 증강"이라고 분명히 인식해 온 공상 과학 판타지 팬들이다. 
라이너스는 대부분이 다른 사람들에 의해 개발이 이루어지는 프로젝트의 게이트 키퍼로 성공적으로 자리 매김하고 이 프로젝트가 자생력을 갖게 될 때까지 프로젝트에 대한 관심을 키움으로써 "크로포트킨"의 원리에 대한 예리한 파악을 보여 주었다. 리눅스 세계에 대한 이러한 유사 경제학적 관점은 우리가 어떻게 이러한 이해가 적용되는지 알 수 있게 해 준다. 
우리는 라이너스의 방법을 지속적인 협력을 통해서만 성취할 수 있는 어려운 목적에 가능한 한 개인 해커들의 이기심을 단단히 연결시키는``.oboo"시장을 만들기 위한 것으로 볼 수 있다. 내가 보여 준 최종 프로젝트로 그의 방법이 좋은 결과와 중복될 수 있다는 것을 보여 주었다. 아마도 나는 그보다 좀 더 의식적이고 체계적으로 그것을 했을 것이다. 
많은 사람들(특히 정치적으로 자유 시장을 불신하는 사람들)은 자기 주도적인 이기주의자들의 문화가 분열되고, 영토적이고, 낭비적이고, 비밀스럽고, 적대적이 되기를 기대할 것이다. 그러나 이러한 예상은 Linux설명서의 놀라운 다양성, 품질 및 깊이에 의해 명확하게 왜곡되어 있습니다. 프로그래머들이 문서화하는 것을 싫어한다는 것을 고려할 때 이는 신성한 일이다; 그렇다면 어떻게 리눅스 해커들이 그렇게 많은 문서를 만들어 낼까? 명백히 Linux의 무료 시장인 Geobu는 상업적인 소프트웨어 생산자들의 대중적인 상점들보다 다른 방법으로 인해 발생하는 도덕적이고 직접적인 행동을 생산하는데 더 효과가 있습니다. 
제트 및 리눅스 커널 프로젝트는 다른 많은 해커들의 자아에 대한 적절히 보상함으로써 강력한 개발 업체인 /copeordinator는 많은 코드들이 있는 혼란의 이익을 캡처하지 않고 인터넷을 사용할 수 있다. 그래서 브룩스의 법칙에 나는 다음과 같은 것들을 반대한다. 
19:만일 개발 담당자가 적어도 인터넷과 같은 의사 소통 수단을 가지고 있고, 강압 없이 어떻게 이끌어 가는지를 알고 있다면, 많은 사람들이 필연적으로 한 사람보다 더 나아.
오픈 소스 소프트웨어의 미래는 점점 더 리너스 게임을 할 줄 아는 사람들, 성당을 떠나 바자회에 가는 사람들에게 속할 것이라고 생각합니다. 이것은 개인의 비전과 명석함이 더 이상 중요하지 않다는 것을 말하는 것이 아니다. 오히려, 오픈 소스 소프트웨어의 최첨단은 개별적인 비전과 명석함에서 시작하는 사람들에 속한다. 
아마 이것은 오픈 소스 소프트웨어의 미래만이 아닐 것이다. 어떤 폐쇄형 소스 개발자도 리눅스 커뮤니티가 어떤 문제에 대해 집중할 수 있는 인재 풀을 따라가지 못 합니다. 매우 적은 사람들만이 200명 이상의 보조금을 낼 수 있었습니다! 
아마도 결국에는 오픈 소스 문화가 승리할 것이다. 협력이 도덕적으로 옳지 않거나 소프트웨어를 사재기 하는 것이 도덕적으로 나쁜 것이 아니라 단지 오픈 소스 시대의 진화적인 문제이기 때문이다.
